/*
 * 云小朵开发者服务平台
 * 云小朵开发者服务平台应用程序接口文档
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: minclouds@163.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.minclouds.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * AppInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-01T22:42:19.023+08:00[Asia/Shanghai]")
public class AppInfo {
  public static final String SERIALIZED_NAME_APP_CODE_PLUS = "appCodePlus";
  @SerializedName(SERIALIZED_NAME_APP_CODE_PLUS)
  private BigDecimal appCodePlus;

  public static final String SERIALIZED_NAME_APP_IMGS = "appImgs";
  @SerializedName(SERIALIZED_NAME_APP_IMGS)
  private String appImgs;

  public static final String SERIALIZED_NAME_APP_NAME = "appName";
  @SerializedName(SERIALIZED_NAME_APP_NAME)
  private String appName;

  public static final String SERIALIZED_NAME_APP_SCORE = "appScore";
  @SerializedName(SERIALIZED_NAME_APP_SCORE)
  private String appScore;

  public static final String SERIALIZED_NAME_APP_SIGNAL = "appSignal";
  @SerializedName(SERIALIZED_NAME_APP_SIGNAL)
  private String appSignal;

  public static final String SERIALIZED_NAME_APP_SIZE = "appSize";
  @SerializedName(SERIALIZED_NAME_APP_SIZE)
  private String appSize;

  public static final String SERIALIZED_NAME_APP_STAR = "appStar";
  @SerializedName(SERIALIZED_NAME_APP_STAR)
  private String appStar;

  public static final String SERIALIZED_NAME_APP_TYPE_STR = "appTypeStr";
  @SerializedName(SERIALIZED_NAME_APP_TYPE_STR)
  private String appTypeStr;

  public static final String SERIALIZED_NAME_APP_VERSION = "appVersion";
  @SerializedName(SERIALIZED_NAME_APP_VERSION)
  private String appVersion;

  public static final String SERIALIZED_NAME_AUTH_CODE_PLUS = "authCodePlus";
  @SerializedName(SERIALIZED_NAME_AUTH_CODE_PLUS)
  private BigDecimal authCodePlus;

  public static final String SERIALIZED_NAME_BANNER = "banner";
  @SerializedName(SERIALIZED_NAME_BANNER)
  private String banner;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private String contact;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DEVELOPER = "developer";
  @SerializedName(SERIALIZED_NAME_DEVELOPER)
  private String developer;

  public static final String SERIALIZED_NAME_ICON = "icon";
  @SerializedName(SERIALIZED_NAME_ICON)
  private String icon;

  /**
   * Gets or Sets installType
   */
  @JsonAdapter(InstallTypeEnum.Adapter.class)
  public enum InstallTypeEnum {
    APPCODE("AppCode"),
    
    AUTHCODE("AuthCode"),
    
    DIRECT("Direct"),
    
    PASSWORD("Password"),
    
    SLIDER("Slider"),
    
    UDIDDIRECT("UdidDirect"),
    
    UDIDPAY("UdidPay"),
    
    VERIFYCODE("VerifyCode");

    private String value;

    InstallTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InstallTypeEnum fromValue(String value) {
      for (InstallTypeEnum b : InstallTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InstallTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InstallTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InstallTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InstallTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INSTALL_TYPE = "installType";
  @SerializedName(SERIALIZED_NAME_INSTALL_TYPE)
  private InstallTypeEnum installType;

  public static final String SERIALIZED_NAME_JUMP_URL = "jumpUrl";
  @SerializedName(SERIALIZED_NAME_JUMP_URL)
  private String jumpUrl;

  public static final String SERIALIZED_NAME_LANG = "lang";
  @SerializedName(SERIALIZED_NAME_LANG)
  private String lang;

  public static final String SERIALIZED_NAME_LAST_VISIT_TIME = "lastVisitTime";
  @SerializedName(SERIALIZED_NAME_LAST_VISIT_TIME)
  private String lastVisitTime;

  public static final String SERIALIZED_NAME_NEW_APP_NAME = "newAppName";
  @SerializedName(SERIALIZED_NAME_NEW_APP_NAME)
  private String newAppName;

  public static final String SERIALIZED_NAME_QRCODE_URL = "qrcodeUrl";
  @SerializedName(SERIALIZED_NAME_QRCODE_URL)
  private String qrcodeUrl;

  /**
   * Gets or Sets separateType
   */
  @JsonAdapter(SeparateTypeEnum.Adapter.class)
  public enum SeparateTypeEnum {
    DYNAMIC("Dynamic"),
    
    ORIGINAL("Original");

    private String value;

    SeparateTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SeparateTypeEnum fromValue(String value) {
      for (SeparateTypeEnum b : SeparateTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SeparateTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeparateTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeparateTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SeparateTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SEPARATE_TYPE = "separateType";
  @SerializedName(SERIALIZED_NAME_SEPARATE_TYPE)
  private SeparateTypeEnum separateType;

  public static final String SERIALIZED_NAME_SHORT_URL = "shortUrl";
  @SerializedName(SERIALIZED_NAME_SHORT_URL)
  private String shortUrl;

  /**
   * Gets or Sets signType
   */
  @JsonAdapter(SignTypeEnum.Adapter.class)
  public enum SignTypeEnum {
    APPSTORE("AppStore"),
    
    MDMENTERPRISE("MdmEnterprise"),
    
    MONTHENTERPRISE("MonthEnterprise"),
    
    ORIGINALMODE("OriginalMode"),
    
    SUPERENTERPRISE("SuperEnterprise"),
    
    SUPERPERSONAL("SuperPersonal"),
    
    TESTFLIGHT("TestFlight");

    private String value;

    SignTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SignTypeEnum fromValue(String value) {
      for (SignTypeEnum b : SignTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SignTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SignTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SignTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SignTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SIGN_TYPE = "signType";
  @SerializedName(SERIALIZED_NAME_SIGN_TYPE)
  private SignTypeEnum signType;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_USER_AGE = "userAge";
  @SerializedName(SERIALIZED_NAME_USER_AGE)
  private String userAge;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public static final String SERIALIZED_NAME_VIDEO_BACKGROUND = "videoBackground";
  @SerializedName(SERIALIZED_NAME_VIDEO_BACKGROUND)
  private String videoBackground;

  public static final String SERIALIZED_NAME_VIDEO_MEDIA = "videoMedia";
  @SerializedName(SERIALIZED_NAME_VIDEO_MEDIA)
  private String videoMedia;


  public AppInfo appCodePlus(BigDecimal appCodePlus) {
    
    this.appCodePlus = appCodePlus;
    return this;
  }

   /**
   * Get appCodePlus
   * @return appCodePlus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getAppCodePlus() {
    return appCodePlus;
  }


  public void setAppCodePlus(BigDecimal appCodePlus) {
    this.appCodePlus = appCodePlus;
  }


  public AppInfo appImgs(String appImgs) {
    
    this.appImgs = appImgs;
    return this;
  }

   /**
   * Get appImgs
   * @return appImgs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppImgs() {
    return appImgs;
  }


  public void setAppImgs(String appImgs) {
    this.appImgs = appImgs;
  }


  public AppInfo appName(String appName) {
    
    this.appName = appName;
    return this;
  }

   /**
   * Get appName
   * @return appName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppName() {
    return appName;
  }


  public void setAppName(String appName) {
    this.appName = appName;
  }


  public AppInfo appScore(String appScore) {
    
    this.appScore = appScore;
    return this;
  }

   /**
   * Get appScore
   * @return appScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppScore() {
    return appScore;
  }


  public void setAppScore(String appScore) {
    this.appScore = appScore;
  }


  public AppInfo appSignal(String appSignal) {
    
    this.appSignal = appSignal;
    return this;
  }

   /**
   * Get appSignal
   * @return appSignal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppSignal() {
    return appSignal;
  }


  public void setAppSignal(String appSignal) {
    this.appSignal = appSignal;
  }


  public AppInfo appSize(String appSize) {
    
    this.appSize = appSize;
    return this;
  }

   /**
   * Get appSize
   * @return appSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppSize() {
    return appSize;
  }


  public void setAppSize(String appSize) {
    this.appSize = appSize;
  }


  public AppInfo appStar(String appStar) {
    
    this.appStar = appStar;
    return this;
  }

   /**
   * Get appStar
   * @return appStar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppStar() {
    return appStar;
  }


  public void setAppStar(String appStar) {
    this.appStar = appStar;
  }


  public AppInfo appTypeStr(String appTypeStr) {
    
    this.appTypeStr = appTypeStr;
    return this;
  }

   /**
   * Get appTypeStr
   * @return appTypeStr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppTypeStr() {
    return appTypeStr;
  }


  public void setAppTypeStr(String appTypeStr) {
    this.appTypeStr = appTypeStr;
  }


  public AppInfo appVersion(String appVersion) {
    
    this.appVersion = appVersion;
    return this;
  }

   /**
   * Get appVersion
   * @return appVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppVersion() {
    return appVersion;
  }


  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }


  public AppInfo authCodePlus(BigDecimal authCodePlus) {
    
    this.authCodePlus = authCodePlus;
    return this;
  }

   /**
   * Get authCodePlus
   * @return authCodePlus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getAuthCodePlus() {
    return authCodePlus;
  }


  public void setAuthCodePlus(BigDecimal authCodePlus) {
    this.authCodePlus = authCodePlus;
  }


  public AppInfo banner(String banner) {
    
    this.banner = banner;
    return this;
  }

   /**
   * Get banner
   * @return banner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBanner() {
    return banner;
  }


  public void setBanner(String banner) {
    this.banner = banner;
  }


  public AppInfo contact(String contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContact() {
    return contact;
  }


  public void setContact(String contact) {
    this.contact = contact;
  }


  public AppInfo createTime(String createTime) {
    
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreateTime() {
    return createTime;
  }


  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public AppInfo description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public AppInfo developer(String developer) {
    
    this.developer = developer;
    return this;
  }

   /**
   * Get developer
   * @return developer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeveloper() {
    return developer;
  }


  public void setDeveloper(String developer) {
    this.developer = developer;
  }


  public AppInfo icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIcon() {
    return icon;
  }


  public void setIcon(String icon) {
    this.icon = icon;
  }


  public AppInfo installType(InstallTypeEnum installType) {
    
    this.installType = installType;
    return this;
  }

   /**
   * Get installType
   * @return installType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstallTypeEnum getInstallType() {
    return installType;
  }


  public void setInstallType(InstallTypeEnum installType) {
    this.installType = installType;
  }


  public AppInfo jumpUrl(String jumpUrl) {
    
    this.jumpUrl = jumpUrl;
    return this;
  }

   /**
   * Get jumpUrl
   * @return jumpUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJumpUrl() {
    return jumpUrl;
  }


  public void setJumpUrl(String jumpUrl) {
    this.jumpUrl = jumpUrl;
  }


  public AppInfo lang(String lang) {
    
    this.lang = lang;
    return this;
  }

   /**
   * Get lang
   * @return lang
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLang() {
    return lang;
  }


  public void setLang(String lang) {
    this.lang = lang;
  }


  public AppInfo lastVisitTime(String lastVisitTime) {
    
    this.lastVisitTime = lastVisitTime;
    return this;
  }

   /**
   * Get lastVisitTime
   * @return lastVisitTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastVisitTime() {
    return lastVisitTime;
  }


  public void setLastVisitTime(String lastVisitTime) {
    this.lastVisitTime = lastVisitTime;
  }


  public AppInfo newAppName(String newAppName) {
    
    this.newAppName = newAppName;
    return this;
  }

   /**
   * Get newAppName
   * @return newAppName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNewAppName() {
    return newAppName;
  }


  public void setNewAppName(String newAppName) {
    this.newAppName = newAppName;
  }


  public AppInfo qrcodeUrl(String qrcodeUrl) {
    
    this.qrcodeUrl = qrcodeUrl;
    return this;
  }

   /**
   * Get qrcodeUrl
   * @return qrcodeUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getQrcodeUrl() {
    return qrcodeUrl;
  }


  public void setQrcodeUrl(String qrcodeUrl) {
    this.qrcodeUrl = qrcodeUrl;
  }


  public AppInfo separateType(SeparateTypeEnum separateType) {
    
    this.separateType = separateType;
    return this;
  }

   /**
   * Get separateType
   * @return separateType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SeparateTypeEnum getSeparateType() {
    return separateType;
  }


  public void setSeparateType(SeparateTypeEnum separateType) {
    this.separateType = separateType;
  }


  public AppInfo shortUrl(String shortUrl) {
    
    this.shortUrl = shortUrl;
    return this;
  }

   /**
   * Get shortUrl
   * @return shortUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShortUrl() {
    return shortUrl;
  }


  public void setShortUrl(String shortUrl) {
    this.shortUrl = shortUrl;
  }


  public AppInfo signType(SignTypeEnum signType) {
    
    this.signType = signType;
    return this;
  }

   /**
   * Get signType
   * @return signType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SignTypeEnum getSignType() {
    return signType;
  }


  public void setSignType(SignTypeEnum signType) {
    this.signType = signType;
  }


  public AppInfo updateTime(String updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpdateTime() {
    return updateTime;
  }


  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  public AppInfo userAge(String userAge) {
    
    this.userAge = userAge;
    return this;
  }

   /**
   * Get userAge
   * @return userAge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserAge() {
    return userAge;
  }


  public void setUserAge(String userAge) {
    this.userAge = userAge;
  }


  public AppInfo uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public AppInfo videoBackground(String videoBackground) {
    
    this.videoBackground = videoBackground;
    return this;
  }

   /**
   * Get videoBackground
   * @return videoBackground
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVideoBackground() {
    return videoBackground;
  }


  public void setVideoBackground(String videoBackground) {
    this.videoBackground = videoBackground;
  }


  public AppInfo videoMedia(String videoMedia) {
    
    this.videoMedia = videoMedia;
    return this;
  }

   /**
   * Get videoMedia
   * @return videoMedia
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVideoMedia() {
    return videoMedia;
  }


  public void setVideoMedia(String videoMedia) {
    this.videoMedia = videoMedia;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppInfo appInfo = (AppInfo) o;
    return Objects.equals(this.appCodePlus, appInfo.appCodePlus) &&
        Objects.equals(this.appImgs, appInfo.appImgs) &&
        Objects.equals(this.appName, appInfo.appName) &&
        Objects.equals(this.appScore, appInfo.appScore) &&
        Objects.equals(this.appSignal, appInfo.appSignal) &&
        Objects.equals(this.appSize, appInfo.appSize) &&
        Objects.equals(this.appStar, appInfo.appStar) &&
        Objects.equals(this.appTypeStr, appInfo.appTypeStr) &&
        Objects.equals(this.appVersion, appInfo.appVersion) &&
        Objects.equals(this.authCodePlus, appInfo.authCodePlus) &&
        Objects.equals(this.banner, appInfo.banner) &&
        Objects.equals(this.contact, appInfo.contact) &&
        Objects.equals(this.createTime, appInfo.createTime) &&
        Objects.equals(this.description, appInfo.description) &&
        Objects.equals(this.developer, appInfo.developer) &&
        Objects.equals(this.icon, appInfo.icon) &&
        Objects.equals(this.installType, appInfo.installType) &&
        Objects.equals(this.jumpUrl, appInfo.jumpUrl) &&
        Objects.equals(this.lang, appInfo.lang) &&
        Objects.equals(this.lastVisitTime, appInfo.lastVisitTime) &&
        Objects.equals(this.newAppName, appInfo.newAppName) &&
        Objects.equals(this.qrcodeUrl, appInfo.qrcodeUrl) &&
        Objects.equals(this.separateType, appInfo.separateType) &&
        Objects.equals(this.shortUrl, appInfo.shortUrl) &&
        Objects.equals(this.signType, appInfo.signType) &&
        Objects.equals(this.updateTime, appInfo.updateTime) &&
        Objects.equals(this.userAge, appInfo.userAge) &&
        Objects.equals(this.uuid, appInfo.uuid) &&
        Objects.equals(this.videoBackground, appInfo.videoBackground) &&
        Objects.equals(this.videoMedia, appInfo.videoMedia);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appCodePlus, appImgs, appName, appScore, appSignal, appSize, appStar, appTypeStr, appVersion, authCodePlus, banner, contact, createTime, description, developer, icon, installType, jumpUrl, lang, lastVisitTime, newAppName, qrcodeUrl, separateType, shortUrl, signType, updateTime, userAge, uuid, videoBackground, videoMedia);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppInfo {\n");
    sb.append("    appCodePlus: ").append(toIndentedString(appCodePlus)).append("\n");
    sb.append("    appImgs: ").append(toIndentedString(appImgs)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    appScore: ").append(toIndentedString(appScore)).append("\n");
    sb.append("    appSignal: ").append(toIndentedString(appSignal)).append("\n");
    sb.append("    appSize: ").append(toIndentedString(appSize)).append("\n");
    sb.append("    appStar: ").append(toIndentedString(appStar)).append("\n");
    sb.append("    appTypeStr: ").append(toIndentedString(appTypeStr)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    authCodePlus: ").append(toIndentedString(authCodePlus)).append("\n");
    sb.append("    banner: ").append(toIndentedString(banner)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    developer: ").append(toIndentedString(developer)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    installType: ").append(toIndentedString(installType)).append("\n");
    sb.append("    jumpUrl: ").append(toIndentedString(jumpUrl)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    lastVisitTime: ").append(toIndentedString(lastVisitTime)).append("\n");
    sb.append("    newAppName: ").append(toIndentedString(newAppName)).append("\n");
    sb.append("    qrcodeUrl: ").append(toIndentedString(qrcodeUrl)).append("\n");
    sb.append("    separateType: ").append(toIndentedString(separateType)).append("\n");
    sb.append("    shortUrl: ").append(toIndentedString(shortUrl)).append("\n");
    sb.append("    signType: ").append(toIndentedString(signType)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    userAge: ").append(toIndentedString(userAge)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    videoBackground: ").append(toIndentedString(videoBackground)).append("\n");
    sb.append("    videoMedia: ").append(toIndentedString(videoMedia)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

