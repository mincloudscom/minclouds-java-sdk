/*
 * 云小朵开发者服务平台
 * 云小朵开发者服务平台应用程序接口文档
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: minclouds@163.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.minclouds.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * UdidPayData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-27T12:14:17.520431+08:00[Asia/Shanghai]")
public class UdidPayData {
  public static final String SERIALIZED_NAME_APP_COUNT = "appCount";
  @SerializedName(SERIALIZED_NAME_APP_COUNT)
  private Integer appCount;

  public static final String SERIALIZED_NAME_BUY_DATA = "buyData";
  @SerializedName(SERIALIZED_NAME_BUY_DATA)
  private Long buyData;

  public static final String SERIALIZED_NAME_GIVE_DATA = "giveData";
  @SerializedName(SERIALIZED_NAME_GIVE_DATA)
  private Long giveData;

  public static final String SERIALIZED_NAME_LAST_PAY = "lastPay";
  @SerializedName(SERIALIZED_NAME_LAST_PAY)
  private BigDecimal lastPay;

  /**
   * Gets or Sets limitType
   */
  @JsonAdapter(LimitTypeEnum.Adapter.class)
  public enum LimitTypeEnum {
    ALL("All"),
    
    INHERITED("Inherited"),
    
    MULTIPLEAPP("MultipleApp"),
    
    MULTIPLEONLY("MultipleOnly"),
    
    SINGLEAPP("SingleApp"),
    
    SINGLEONLY("SingleOnly"),
    
    UNLIMITEDAPP("UnlimitedApp"),
    
    UNLIMITEDONLY("UnlimitedOnly");

    private String value;

    LimitTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LimitTypeEnum fromValue(String value) {
      for (LimitTypeEnum b : LimitTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LimitTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LimitTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LimitTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LimitTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LIMIT_TYPE = "limitType";
  @SerializedName(SERIALIZED_NAME_LIMIT_TYPE)
  private LimitTypeEnum limitType;

  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_PAY_TIME = "payTime";
  @SerializedName(SERIALIZED_NAME_PAY_TIME)
  private OffsetDateTime payTime;

  /**
   * Gets or Sets payType
   */
  @JsonAdapter(PayTypeEnum.Adapter.class)
  public enum PayTypeEnum {
    ALL("All"),
    
    BYMONTH("ByMonth"),
    
    BYTIMES("ByTimes"),
    
    BYYEAR("ByYear"),
    
    INHERITED("Inherited"),
    
    MONTHONLY("MonthOnly"),
    
    TIMESONLY("TimesOnly"),
    
    YEARONLY("YearOnly");

    private String value;

    PayTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PayTypeEnum fromValue(String value) {
      for (PayTypeEnum b : PayTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PayTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PayTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PayTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PayTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PAY_TYPE = "payType";
  @SerializedName(SERIALIZED_NAME_PAY_TYPE)
  private PayTypeEnum payType;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_SUB_UUID = "subUuid";
  @SerializedName(SERIALIZED_NAME_SUB_UUID)
  private String subUuid;

  public static final String SERIALIZED_NAME_UDID = "udid";
  @SerializedName(SERIALIZED_NAME_UDID)
  private String udid;

  public static final String SERIALIZED_NAME_USER_UUID = "userUuid";
  @SerializedName(SERIALIZED_NAME_USER_UUID)
  private String userUuid;


  public UdidPayData appCount(Integer appCount) {
    
    this.appCount = appCount;
    return this;
  }

   /**
   * Get appCount
   * @return appCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAppCount() {
    return appCount;
  }


  public void setAppCount(Integer appCount) {
    this.appCount = appCount;
  }


  public UdidPayData buyData(Long buyData) {
    
    this.buyData = buyData;
    return this;
  }

   /**
   * Get buyData
   * @return buyData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getBuyData() {
    return buyData;
  }


  public void setBuyData(Long buyData) {
    this.buyData = buyData;
  }


  public UdidPayData giveData(Long giveData) {
    
    this.giveData = giveData;
    return this;
  }

   /**
   * Get giveData
   * @return giveData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getGiveData() {
    return giveData;
  }


  public void setGiveData(Long giveData) {
    this.giveData = giveData;
  }


  public UdidPayData lastPay(BigDecimal lastPay) {
    
    this.lastPay = lastPay;
    return this;
  }

   /**
   * Get lastPay
   * @return lastPay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getLastPay() {
    return lastPay;
  }


  public void setLastPay(BigDecimal lastPay) {
    this.lastPay = lastPay;
  }


  public UdidPayData limitType(LimitTypeEnum limitType) {
    
    this.limitType = limitType;
    return this;
  }

   /**
   * Get limitType
   * @return limitType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LimitTypeEnum getLimitType() {
    return limitType;
  }


  public void setLimitType(LimitTypeEnum limitType) {
    this.limitType = limitType;
  }


  public UdidPayData orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public UdidPayData payTime(OffsetDateTime payTime) {
    
    this.payTime = payTime;
    return this;
  }

   /**
   * Get payTime
   * @return payTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPayTime() {
    return payTime;
  }


  public void setPayTime(OffsetDateTime payTime) {
    this.payTime = payTime;
  }


  public UdidPayData payType(PayTypeEnum payType) {
    
    this.payType = payType;
    return this;
  }

   /**
   * Get payType
   * @return payType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PayTypeEnum getPayType() {
    return payType;
  }


  public void setPayType(PayTypeEnum payType) {
    this.payType = payType;
  }


  public UdidPayData phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  public UdidPayData subUuid(String subUuid) {
    
    this.subUuid = subUuid;
    return this;
  }

   /**
   * Get subUuid
   * @return subUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubUuid() {
    return subUuid;
  }


  public void setSubUuid(String subUuid) {
    this.subUuid = subUuid;
  }


  public UdidPayData udid(String udid) {
    
    this.udid = udid;
    return this;
  }

   /**
   * Get udid
   * @return udid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdid() {
    return udid;
  }


  public void setUdid(String udid) {
    this.udid = udid;
  }


  public UdidPayData userUuid(String userUuid) {
    
    this.userUuid = userUuid;
    return this;
  }

   /**
   * Get userUuid
   * @return userUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserUuid() {
    return userUuid;
  }


  public void setUserUuid(String userUuid) {
    this.userUuid = userUuid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UdidPayData udidPayData = (UdidPayData) o;
    return Objects.equals(this.appCount, udidPayData.appCount) &&
        Objects.equals(this.buyData, udidPayData.buyData) &&
        Objects.equals(this.giveData, udidPayData.giveData) &&
        Objects.equals(this.lastPay, udidPayData.lastPay) &&
        Objects.equals(this.limitType, udidPayData.limitType) &&
        Objects.equals(this.orderId, udidPayData.orderId) &&
        Objects.equals(this.payTime, udidPayData.payTime) &&
        Objects.equals(this.payType, udidPayData.payType) &&
        Objects.equals(this.phone, udidPayData.phone) &&
        Objects.equals(this.subUuid, udidPayData.subUuid) &&
        Objects.equals(this.udid, udidPayData.udid) &&
        Objects.equals(this.userUuid, udidPayData.userUuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appCount, buyData, giveData, lastPay, limitType, orderId, payTime, payType, phone, subUuid, udid, userUuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UdidPayData {\n");
    sb.append("    appCount: ").append(toIndentedString(appCount)).append("\n");
    sb.append("    buyData: ").append(toIndentedString(buyData)).append("\n");
    sb.append("    giveData: ").append(toIndentedString(giveData)).append("\n");
    sb.append("    lastPay: ").append(toIndentedString(lastPay)).append("\n");
    sb.append("    limitType: ").append(toIndentedString(limitType)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    payTime: ").append(toIndentedString(payTime)).append("\n");
    sb.append("    payType: ").append(toIndentedString(payType)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    subUuid: ").append(toIndentedString(subUuid)).append("\n");
    sb.append("    udid: ").append(toIndentedString(udid)).append("\n");
    sb.append("    userUuid: ").append(toIndentedString(userUuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

